package kau.midterm

/*
    객체지향 프로그래밍

    - 프로그램을 수많은 객체라는 기본 단위로 나누고 이들의 상호작용을 서술하는 방식
    - 데이터(필드, 프로퍼티)와 함수(메서드)를 병합하여 프로그램의 단위인 '객체' 및 '클래스'를 정의

    특징

    - 자료 추상화 : 불필요한 정보 숨기고, 중요한 정보만 노출
    - 상속 : 연관된 클래스 간에 상하위 연관성을 두어 클래스 선언
    - 다형성 : 한 요소에 여러 개념을 넣어 놓는 것. (개념간 일관성 필요)
        - 오버라이딩 : 같은 이름의 메소드가 서로 다른 클래스에서 다른 동작 수행 (override)
        - 오버로딩 : 같은 이름의 메소드가 인자의 형태(개수, 타입 등)에 따라 다른 동작 수행

    역사

    - Simula 67 : 최초의 객체지향 언어
    - Smalltalk : 객체지향언어를 수면 위로 끌어올림
    - C++ : 객체지향 개념을 C언어에 구현
    - Java
    - Kotlin

    코틀린 특징

    - 안전성 : 타입 추론 / NPE / 스마트 캐스트를 통한 안전한 타입 변환
    - 다중 패러다임 : 함수형 프로그래밍 / 코투린(동시성)
    - 간결성과 표현력
    - 상호운용성 / 다중플랫폼
 */